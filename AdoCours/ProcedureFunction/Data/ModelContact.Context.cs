//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProcedureFunction.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DBContactEntities : DbContext
    {
        public DBContactEntities()
            : base("name=DBContactEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Contact> Contact { get; set; }
    
        public virtual int InsertContact(string nom, string prenom, Nullable<System.DateTime> dateNaiss)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("prenom", prenom) :
                new ObjectParameter("prenom", typeof(string));
    
            var dateNaissParameter = dateNaiss.HasValue ?
                new ObjectParameter("dateNaiss", dateNaiss) :
                new ObjectParameter("dateNaiss", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertContact", nomParameter, prenomParameter, dateNaissParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsertContactAndReturn(string nom, string prenom, Nullable<System.DateTime> dateNaiss)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("prenom", prenom) :
                new ObjectParameter("prenom", typeof(string));
    
            var dateNaissParameter = dateNaiss.HasValue ?
                new ObjectParameter("dateNaiss", dateNaiss) :
                new ObjectParameter("dateNaiss", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertContactAndReturn", nomParameter, prenomParameter, dateNaissParameter);
        }
    
        public virtual ObjectResult<string> SelectionContactNom(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SelectionContactNom", nameParameter);
        }
    
        [EdmFunction("DBContactEntities", "AllContact")]
        public virtual IQueryable<AllContact_Result> AllContact()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AllContact_Result>("[DBContactEntities].[AllContact]()");
        }
    
        [EdmFunction("DBContactEntities", "OneContact")]
        public virtual IQueryable<OneContact_Result> OneContact(Nullable<int> idContact)
        {
            var idContactParameter = idContact.HasValue ?
                new ObjectParameter("idContact", idContact) :
                new ObjectParameter("idContact", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OneContact_Result>("[DBContactEntities].[OneContact](@idContact)", idContactParameter);
        }
    }
}
